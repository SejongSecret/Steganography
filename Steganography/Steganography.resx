<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="imagePictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>54</value>
  </metadata>
</root>